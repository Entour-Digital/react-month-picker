{"version":3,"sources":["components/MonthPicker/MonthPicker.styled.js","components/MonthPicker/Selector/Selector.styled.js","components/MonthPicker/Selector/Selector.js","components/MonthPicker/MonthPicker.js","App.js","reportWebVitals.js","index.js"],"names":["Selected","styled","div","TitleWrapper","SelectedText","Modal","Presets","MonthPicker","Title","Preset","YearPicker","YearTitle","Months","Month","props","disabled","Selector","presets","onChange","useState","yearIndex","setYearIndex","years","setYears","selected","setSelected","useEffect","ys","year","months","map","month","date","moment","toDate","push","Number","format","length","p","i","onClick","e","start","end","pickPreset","title","icon","faChevronCircleLeft","style","width","height","opacity","cursor","faChevronCircleRight","m","className","isBetween","isAfter","endOf","monthIndex","isBefore","setSelectedLocal","memo","value","selectOpen","setSelectOpen","setTitle","currentVal","setCurrentVal","presetTitle","find","isSame","faChevronDown","v","setTimeout","App","margin","utc","startOf","subtract","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db092807.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Selected = styled.div`\n  border: #eee 1px solid;\n  border-radius: 5px;\n  position: relative;\n  user-select: none;\n  min-width: 200px;\n\tbackground-color: white;\n`;\n\nexport const TitleWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: row;\n  align-items: center;\n  padding: 5px 10px;\n`;\n\nexport const SelectedText = styled.div``;\n","import styled from \"styled-components\";\n\nexport const Modal = styled.div`\n  background-color: white;\n  border: #eee 1px solid;\n  position: absolute;\n  top: 35px;\n  right: 0;\n  z-index: 99999;\n  width: 425px;\n  flex-direction: row;\n  display: flex;\n  border-radius: 5px;\n  box-shadow: 0 0 10px 0 rgb(0 0 0 / 20%);\n`;\n\nexport const Presets = styled.div`\n  box-sizing: border-box;\n  flex: 0.5;\n  padding: 20px;\n  border-right: #eee 1px solid;\n`;\n\nexport const MonthPicker = styled.div`\n  box-sizing: border-box;\n  flex: 1;\n  padding: 20px;\n`;\n\nexport const Title = styled.div`\n  color: #575757;\n  margin: 0 0 20px 0;\n  user-select: none;\n`;\n\nexport const Preset = styled.div`\n  color: #282c34;\n  font-weight: bold;\n  cursor: pointer;\n`;\n\nexport const YearPicker = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nexport const YearTitle = styled.div`\n  user-select: none;\n`;\n\nexport const Months = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  gap: 5px;\n  margin-top: 10px;\n`;\n\nexport const Month = styled.div`\n  border: #eee 1px solid;\n  padding: 5px;\n  border-radius: 5px;\n  background-color: white;\n  text-align: center;\n  &:hover {\n    box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.2);\n  }\n  &.selected {\n    background-color: #1d7f7a;\n    color: white;\n  }\n  pointer-events: ${(props) => (props.disabled ? \"none\" : \"auto\")};\n  opacity: ${(props) => (props.disabled ? 0.5 : 1)};\n  cursor: ${(props) => (props.disabled ? \"default\" : \"pointer\")};\n`;\n","import moment from \"moment\";\nimport React, { memo, useState, useEffect } from \"react\";\nimport {\n  Modal,\n  Presets,\n  MonthPicker,\n  Title,\n  Preset,\n  YearPicker,\n  YearTitle,\n  Months,\n  Month,\n} from \"./Selector.styled\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronCircleLeft,\n  faChevronCircleRight,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Selector = ({ presets, onChange }) => {\n  const [yearIndex, setYearIndex] = useState(0);\n  const [years, setYears] = useState([]);\n  const [selected, setSelected] = useState([]);\n\n  useEffect(() => {\n    let ys = [];\n    for (let year = 2010; year <= Number(moment().format(\"YYYY\")); year++) {\n      const months = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].map((month) => {\n        let date = moment(year + \"-\" + month + \"-01 00:00:00\").toDate();\n        return {\n          selected: false,\n          date,\n        };\n      });\n      ys.push({ year, months });\n    }\n    setYears(ys);\n    setYearIndex(ys.length - 1);\n  }, []);\n\n  useEffect(() => {\n    if (selected.length === 2) {\n      onChange(selected);\n    }\n  }, [selected, onChange]);\n\n  const setSelectedLocal = (monthIndex, month) => {\n    let ys = [...years];\n    ys[yearIndex].months[monthIndex].selected = true;\n    setYears(ys);\n    if (!selected.length) {\n      setSelected([month.date]);\n    } else {\n      if (moment(selected[0]).isBefore(moment(month.date))) {\n        setSelected([selected[0], month.date]);\n      } else {\n        setSelected([month.date, selected[0]]);\n      }\n    }\n  };\n\n  const pickPreset = ({ start, end }) => {\n    setSelected([start, end]);\n  };\n\n  const year = years[yearIndex];\n\n  if (!year) {\n    return null;\n  }\n\n  return (\n    <Modal>\n      {presets && presets.length && (\n        <Presets>\n          <Title>PRESETS</Title>\n          {presets.map((p, i) => (\n            <Preset onClick={(e) => pickPreset(p)} key={i}>\n              {p.title}\n            </Preset>\n          ))}\n        </Presets>\n      )}\n      <MonthPicker>\n        <Title>SELECT A MONTH RANGE:</Title>\n        <YearPicker>\n          <FontAwesomeIcon\n            icon={faChevronCircleLeft}\n            style={{\n              width: 20,\n              height: 20,\n              opacity: !yearIndex ? 0.2 : 1,\n              cursor: !yearIndex ? \"default\" : \"pointer\",\n            }}\n            onClick={(e) => (yearIndex ? setYearIndex(yearIndex - 1) : null)}\n          />\n          <YearTitle>{year.year}</YearTitle>\n          <FontAwesomeIcon\n            icon={faChevronCircleRight}\n            style={{\n              width: 20,\n              height: 20,\n              opacity: yearIndex === years.length - 1 ? 0.2 : 1,\n              cursor: yearIndex === years.length - 1 ? \"default\" : \"pointer\",\n            }}\n            onClick={(e) =>\n              yearIndex < years.length - 1 ? setYearIndex(yearIndex + 1) : null\n            }\n          />\n        </YearPicker>\n        <Months>\n          {year.months.map((m, i) => (\n            <Month\n              className={\n                m.selected === true ||\n                  (selected.length === 2 &&\n                    moment(m.date).isBetween(\n                      moment(selected[0]),\n                      moment(selected[1])\n                    ))\n                  ? \"selected\"\n                  : \"\"\n              }\n              disabled={moment(m.date).isAfter(moment().endOf(\"month\"))}\n              key={i}\n              onClick={(e) => setSelectedLocal(i, m)}\n            >\n              {m.selected} {moment(m.date).format(\"MMM\")}\n            </Month>\n          ))}\n        </Months>\n      </MonthPicker>\n    </Modal>\n  );\n};\n\nexport default memo(Selector);\n","import moment from \"moment\";\nimport React, { memo, useState, useEffect } from \"react\";\nimport { Selected, SelectedText, TitleWrapper } from \"./MonthPicker.styled\";\nimport Selector from \"./Selector/Selector\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\n\nconst MonthPicker = ({ onChange, value, presets, style }) => {\n  const [selectOpen, setSelectOpen] = useState(false);\n  const [title, setTitle] = useState(false);\n  const [currentVal, setCurrentVal] = useState(value);\n\n  useEffect(() => {\n    if (!currentVal || currentVal.length < 2) {\n      return setTitle(\"No dates selected\");\n    }\n    const presetTitle = presets && presets.length\n      ? presets.find(\n        (p) =>\n          (moment(p.start).isSame(moment(currentVal[0]), \"month\") || p.start) === currentVal[0] &&\n          (moment(p.end).isSame(moment(currentVal[1]), \"month\") || p.end) === currentVal[1]\n      )\n      : null;\n    return setTitle(\n      presetTitle\n        ? presetTitle.title\n        : moment(currentVal[0]).format(\"MMM YY\") + \" - \" + moment(currentVal[1]).format(\"MMM YY\")\n    );\n  }, [currentVal, presets]);\n\n  const localChange = (v) => {\n    setCurrentVal(v);\n    if (typeof onChange === \"function\") {\n      onChange(v);\n    }\n\n    setTimeout(() => {\n      setSelectOpen(false);\n    }, 200);\n  };\n\n  return (\n    <Selected style={style}>\n      <TitleWrapper onClick={(e) => setSelectOpen(!selectOpen)}>\n        <SelectedText>{title}</SelectedText>\n        <FontAwesomeIcon\n          icon={faChevronDown}\n          style={{\n            width: 14,\n            height: 14,\n          }}\n        />\n      </TitleWrapper>\n      {selectOpen && <Selector presets={presets} onChange={localChange} />}\n    </Selected>\n  );\n};\n\nexport default memo(MonthPicker);\n","import './App.css';\nimport MonthPicker from './components/MonthPicker/MonthPicker';\nimport moment from 'moment';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MonthPicker\n        style={{ width: 300, margin: \"50px auto\" }}\n        presets={[\n          {\n            title: \"This month\",\n            start: moment.utc().startOf(\"month\"),\n            end: moment.utc().endOf(\"month\"),\n          },\n          {\n            title: \"Past 3 months\",\n            start: moment.utc().subtract(2, \"month\").startOf(\"month\"),\n            end: moment.utc().endOf(\"month\"),\n          },\n          {\n            title: \"Past 6 months\",\n            start: moment.utc().subtract(5, \"month\").startOf(\"month\"),\n            end: moment.utc().endOf(\"month\"),\n          },\n          {\n            title: \"Past Year\",\n            start: moment.utc().subtract(12, \"month\").startOf(\"month\"),\n            end: moment.utc().endOf(\"month\"),\n          },\n          {\n            title: \"All time\",\n            start: null,\n            end: null,\n          },\n        ]} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}